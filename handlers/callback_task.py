import logging
from telebot.types import CallbackQuery
from db import repository as db

logger = logging.getLogger(__name__)

def register(bot):

    @bot.callback_query_handler(lambda cb: cb.data.startswith('task|'))
    def cb_task(cb: CallbackQuery):
        try:
            # –†–∞–∑–±–æ—Ä callback_data: task|<message_id>|<status_key>|<thread_id>
            _, mid_s, status_key, tid_s = cb.data.split('|', 3)
            mid = int(mid_s)
            tid = None if tid_s == 'None' else int(tid_s)
            cid = cb.message.chat.id
        except Exception:
            logger.exception("–û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ callback task")
            return bot.answer_callback_query(cb.id, "‚ùó –û—à–∏–±–∫–∞ –∫–Ω–æ–ø–∫–∏", show_alert=True)

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ –∏–∑ –±–∞–∑—ã
        try:
            row = db.get_task_by_id(cid, tid, mid)
            if not row:
                raise LookupError("–ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            _, text, _, _ = row
        except Exception:
            logger.exception("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –ø–æ message_id")
            return bot.answer_callback_query(cb.id, "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞–¥–∞—á—É", show_alert=True)

        # –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –ø–æ —Å—Ç–∞—Ç—É—Å—É
        prefix = {
            'ne': '‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞',
            'accepted': '‚úÖ –ü—Ä–∏–Ω—è—Ç–∞—è –∑–∞–¥–∞—á–∞'
        }.get(status_key, 'üìå –ó–∞–¥–∞—á–∞')

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å reply_to
        try:
            bot.send_message(
                cid,
                f"{prefix}: {text}",
                reply_to_message_id=mid,
                message_thread_id=tid
            )
        except Exception:
            logger.exception("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–¥–∞—á–µ–π")

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º callback
        try:
            bot.answer_callback_query(cb.id)
        except Exception:
            logger.exception("–û—à–∏–±–∫–∞ –≤ answer_callback_query")
