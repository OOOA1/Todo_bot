import logging
from telebot.types import CallbackQuery
from telebot.apihelper import ApiTelegramException
from db import repository as db
from utils import parse_callback, throttling_decorator

logger = logging.getLogger(__name__)

def register(bot):
    @throttling_decorator
    @bot.callback_query_handler(func=lambda c: c.data.startswith("task|"))
    def task_callback(cb: CallbackQuery):
        cid = cb.message.chat.id
        tid = cb.message.message_thread_id
        data = cb.data

        _, mid, status, _ = parse_callback(data)

        try:
            # –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º reply –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
            bot.send_message(
                cid,
                "üîó –ó–∞–¥–∞—á–∞ üëá",
                reply_to_message_id=int(mid),
                message_thread_id=tid
            )
            bot.answer_callback_query(cb.id, "–ó–∞–¥–∞—á–∞ –æ—Ç–∫—Ä—ã—Ç–∞ üëÄ")
        except ApiTelegramException as e:
            if "message to reply not found" in str(e):
                db.delete_task_by_message_id(mid)
                bot.answer_callback_query(cb.id, "‚ùå –ó–∞–¥–∞—á–∞ –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", show_alert=True)
            elif e.error_code == 429:
                logger.warning(f"[RATE LIMIT] {e}")
                bot.answer_callback_query(cb.id, "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ", show_alert=True)
            else:
                logger.warning(f"[API ERROR] message_id={mid} ‚ûú {e}")
                bot.answer_callback_query(cb.id, "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á—É", show_alert=True)
        except Exception as e:
            logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ task callback")
            bot.answer_callback_query(cb.id, "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á—É", show_alert=True)
